# Question 1 ====================================
# [] are square brackes and denote the creation of a list.

# Question 2 ====================================
# spam[2] = 'hello'

# Question 3 ====================================
# spam[int(int('3'*2)/11)] = spam[33/11] = spam[3] = 'd'

# Question 4 ====================================
# spam[-1] = 'd'

# Question 5 ====================================
# spam[:2] = ['a', 'b']

# Question 6 ====================================
# bacon.index('cat') = 1 # returns the first location of cat

# Question 7 ====================================
# bacon.append(99) makes the list look like [3.14, 'cat', 11, 'cat', True, 99]

# Question 8 ====================================
# bacon.remove('cat') makes the list look like [3.14, 11,'cat',True, 99]

# Question 9 ====================================
# The operators for list concatenation and list replication are + and *

# Question 10 ===================================
# The difference between the append and insert list methods are that append adds the item onto the last position [:-1]
# The insert list method allows for an item to be added to a specific loaction.

# Question 11 ===================================
# Two ways to remove values from a list, .remove() and del() (remove for known value, del for known index)

# Question 12 ===================================
# List values are similiar to strings in that a string can be thought of as a list of single text characters, and that they both can be 
# indexed, sliced and used in loops with len() and with in and not in operators

# Question 13 ===================================
# The difference between Lists and Tuples are that Tuples use parentheses and mainly that tuples are immutable and lists are not.
# Tuples cannot have their values modified, appended or removed

# Question 14 ===================================
# ('42',) - Trailing comma after the first value designates as tuple, otherwise it will just see it as a value in parentheses

# Question 15 ===================================
# Lists can be converted into a tuple using the tuple operator - tuple([list here])
# similarly tuples can be converted into lists using the list operator - list((tuple here))

# Question 16 ===================================
# Variables contain references to list values instead of teh lists directly

# Question 17 ===================================
# The copy.copy() function will do a shallow copy of a list, while the copy.deepcopy() function will do a deep copy of a list.
# That is, only copy.deepcopy() will duplicate any lists inside the list.

 

